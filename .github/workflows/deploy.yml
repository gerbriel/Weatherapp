name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

# Permissions needed for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Validate environment variables
      run: |
        echo "üîç Checking environment variables..."
        echo "VITE_SUPABASE_URL length: ${#VITE_SUPABASE_URL}"
        echo "VITE_SUPABASE_ANON_KEY length: ${#VITE_SUPABASE_ANON_KEY}"
        if [ -z "${{ secrets.VITE_SUPABASE_URL }}" ]; then
          echo "‚ùå VITE_SUPABASE_URL secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.VITE_SUPABASE_ANON_KEY }}" ]; then
          echo "‚ùå VITE_SUPABASE_ANON_KEY secret is not set"
          exit 1
        fi
        echo "‚úÖ Environment variables validated"
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

    - name: Build application
      env:
        VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
        VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      run: |
        echo "üî® Building application with Vite..."
        echo "üìç Base URL will be: /Weatherapp/"
        echo "üîß Environment variables for build:"
        echo "VITE_SUPABASE_URL length: ${#VITE_SUPABASE_URL}"
        echo "VITE_SUPABASE_ANON_KEY length: ${#VITE_SUPABASE_ANON_KEY}"
        npm run build
        echo "‚úÖ Build completed successfully"

    - name: Prepare GitHub Pages deployment
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
      run: |
        echo "üìÅ Preparing dist folder for GitHub Pages..."
        
        # Ensure dist directory exists
        if [ ! -d "dist" ]; then
          echo "‚ùå dist directory not found!"
          exit 1
        fi
        
        # Copy nojekyll file
        if [ -f ".nojekyll" ]; then
          cp .nojekyll dist/.nojekyll
          echo "‚úÖ Copied .nojekyll"
        else
          echo "‚ö†Ô∏è  .nojekyll file not found, creating one"
          touch dist/.nojekyll
        fi
        
        # Create 404.html for SPA routing
        cp dist/index.html dist/404.html
        echo "‚úÖ Created 404.html for SPA routing"
        
        echo "üìã Final dist contents:"
        ls -la dist/

    - name: Setup Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
      uses: actions/upload-pages-artifact@v4
      with:
        path: ./dist

    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
      id: deployment
      uses: actions/deploy-pages@v4